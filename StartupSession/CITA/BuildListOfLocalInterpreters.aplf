 (R log)←BuildListOfLocalInterpreters;k;i;keys;int;exe;bak;cnt;file;json;docFld;old;z;doc
 ⍝ add:
 ⍝ ParseU: ''
 ⍝ ParseA: 'looong list'
 ⍝ to differentiate between API- and UCMD-Calls,
 int←⍬
 log←''
 :Select 3↑1⊃'.'⎕WG'APLVersion'

 :Case 'Win'
     docFld←(2 ⎕NQ'.' 'GetEnvironment' 'USERPROFILE'),'/Documents'
     keys←WinReg.GetAllSubKeyNames dyalog←'HKEY_CURRENT_USER\SOFTWARE\Dyalog'
     :For k :In keys
         :If (12↑k)≡'Dyalog APL/W'  ⍝ is it an interpreter
             exe←(WinReg.GetString dyalog,'\',k,'\Dyalog'){⍺,((~∨/'\/'=¯1↑⍺)/'\'),⍵}'dyalog.exe'
             :If ⎕NEXISTS exe
                 i←⎕NS'' ⍝ collect data in this ns
                 i.exe←∊1 ⎕NPARTS exe
                 i.Bits←(32 64)[1+'-64'≡3↑12↓k]
                 i.Edition←'CU'[1+∨/'Unicode'⍷k]
                 i.Version←3⊃2⊃' '⎕VFI k
                 i.id←i.((⍕Version×10),Edition,⍕Bits)
                 int,←i
             :Else
                 log,←⊂'Registry key "',k,'" was not considered because "',exe,'" was not found!'
             :EndIf
         :EndIf
     :EndFor
 :Case 'Mac'
     docFld←'/Users/',⎕AN,'/Documents'
     :For fld :In '/Applications/Dyalog*' '/Dyalog/Dyalog*'
         :For k :In ⊃0(⎕NINFO⍠1)
             exe←k,'/Contents/Resources/Dyalog/mapl'
             :If ⎕NEXISTS exe
                 i←⎕NS'' ⍝ collect data in this ns
                 i.exe←∊1 ⎕NPARTS exe
                 i.Bits←64
                 i.Edition←'U'
                 i.Version←2⊃2⊃'-'⎕VFI ¯4↓k
                 i.id←i.((⍕Version×10),Edition,⍕Bits)
                 int,←i
             :Else
                 log,←⊂'Folder "',k,'" was excluded because it did not contain expected "',exe,'"'
             :EndIf
         :EndFor
     :EndFor
 :Case 'Lin'
     docFld←'/opt/mdyalog'
     :For exe :In ⊃0(⎕NINFO⍠'Recurse' 1)'/opt/mdyalog/mapl'
         :If ⎕NEXISTS exe
             i←⎕NS'' ⍝ collect data in this ns
             i.exe←∊1 ⎕NPARTS exe
             i.Bits←64
             i.Edition←'CU'[1+'unicode'⍷exe]
             i.Version←4⊃2⊃'/'⎕VFI exe
             i.id←i.((⍕Version×10),Edition,⍕Bits)
             int,←i
         :Else
             log,←⊂'Folder "',k,'" was excluded because it did not contain expected "',exe,'"'
         :EndIf
     :EndFor

 :EndSelect



 :If 0<≢int
     doc←⎕NS''
     doc.id←'doc'
     doc._←⊂'This file is created, used and updated by CITA (Continous Integration & Testing in APL)        '
     doc._,←⊂'-----------------------------------------------------------------------------------------------'
     doc._,←⊂'It contains the complete inventory of locally installed interpreters that might be used in test'
     doc._,←⊂'when ExecuteLocalTests is called with the ''a''-Flag.                                            '
     doc._,←⊂'It is possible to indicate non-availability for tests of individual interpreters by setting    '
     doc._,←⊂'''disabled'' to a non-empty string.                                                              '
     doc._,←⊂'The ''id''-field is used to identify interpreters, while ''Bits'' and ''Edition'' describe the       '
     doc._,←⊂'respective characteristics of an interpreter.                                                  '
     doc._,←⊂'If any interpreter in this list should not be found again on a re-scan, its entry will get     '
     doc._,←⊂'a value in the ''disabled''-field, we never delete from this list! Newly installed interpreters  '
     doc._,←⊂'will be added (and will be enabled) automatically.                                             '

     int←doc,int

     file←∊1 ⎕NPARTS docFld,'/Dyalog APL Files/interpreters.json5'
     :If ⎕NEXISTS file
         old←(⎕JSON⍠'Dialect' 'JSON5')1⊃⎕NGET file
         :If old.id≡⊂int.id
         :AndIf old≡⍥{6::'' ⋄ ⍵.disabled}int  ⍝ also compare "disabled" - but avoid VALUE ERRORs
         :AndIf old≡⍥{6::'' ⋄ ⍵.exe}int
             R←1 ⋄ log←⊂'No changes found - file "',file,'" was not replaced'
             →End
         :Else
             z←~old.id∊int.id
             :If ∨/z
                 (z/old)⍎¨⊂'disabled←∊''"Disabled by interpreter-scan on "Dddd, DDoo Mmmm YYYY; hh:mm:ss''(1200⌶)1 ⎕DT ⊂⎕TS'
                 log,←⊂'Disabled ',(¯2↓∊'"',¨z/old.id,¨⊂'", '),' which were not found'
             :EndIf
             z←~int.id∊old.id
             old←old,z/int
             :If ∨/z ⋄ log,←⊂'Found and included new interpreters: ',¯2↓∊'"',¨z/int.id,¨⊂'", ' ⋄ :EndIf
             old←old[⍋old.id]
             old←old[(≢old){⍵,(⍳⍺)~⍵}old.id⍳⊂'doc']  ⍝ make sure doc stays on top
             log,←⊂'Updated "',file,'"'
             (⊂(⎕JSON⍠'Compact' 0)old)⎕NPUT file 1
         :EndIf
     :Else
         log,←⊂'Created "',file,'"'
         (⊂(⎕JSON⍠'Compact' 0)int)⎕NPUT file
     :EndIf
     R←1
 :Else
     R←0
     log,←⊂'Nothing to do - no interpreters found! (How did you even execute this?)'
 :EndIf
End:
