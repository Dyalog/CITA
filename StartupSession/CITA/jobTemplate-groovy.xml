<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.40">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.7.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.7.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.87">
    <script>
    def runMac = { version  ->
        stage('mac') {
          node {
            label 'mac'
          }
          //steps {
                         progFolder = &quot;/Dyalog/Dyalog-${version}&quot;
                          path = &quot;$progFolder/Contents/Resources/Dyalog/mapl&quot;
                          exists = fileExists(path)                      
                          if (exists) {
                            echo &quot;Mac $path=${path}: File exists!&quot;
                          } else {
                            echo &quot;Mac, path=${path}: File does not exist!&quot;
                          }
            
            println &quot;Hello World - this executed on mac  with $version&quot;
          //}
        }
    }
    pipeline {
      agent none
      stages {
       stage (&quot;main&quot;) {
          steps {                
            script {
              def dontrun = '/mac,classic/mac,32/linux,32';
              ['18.0' , '18.1', '18.2'].each { VERSION ->
                ['mac' , 'win' , 'linux'].each { PLATFORM ->
                  ['unicode' , 'classic'].each { EDITION ->
                    [32,64].each { BITS ->
                    if (
                      (0>dontrun.indexOf(&quot;/$PLATFORM,$BITS&quot;)) &amp;&amp;
                      (0>dontrun.indexOf(&quot;/$PLATFORM,$EDITION&quot;))
                      )
                    {
                            switch (&quot;$PLATFORM&quot;){
                              case 'mac':
                                //runMac.call(&quot;$VERSION&quot;);
                                printlin 'mac is troublesome, as always!'
                              case 'linux':
                                println 'run linux container'
                              case 'win':
                                println 'do it on windows'
                            }                      
                    } else{
                      println &quot;*** Excluded platform *** v$VERSION on $PLATFORM ed:$EDITION, bits:$BITS&quot; 
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
    }
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>