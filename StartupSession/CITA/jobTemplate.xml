<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.40">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.7.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.7.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.87">
    <script>
    pipeline {
      agent any
      options { 
        disableConcurrentBuilds() 
      }
      stages {
        stage ("Cleanup") {
          agent {
            label "aix&&18.2&&cita_latest"
          }
          steps {
            cleanWs()
            catchError(buildResult: "UNSTABLE", stageResult: "FAILURE") {
              script {
                def citaDEVT = "/devt/"
                sh "/opt/mdyalog/18.2/64/unicode/p8/mapl load=/devt/apltools/CITA/CITA-Tests/cleanup.aplf configfile=/devt/apltools/CITA/CITA-Tests/cleanup.dcfg FOLDER=%xinD%"              
                sh "exit 0"  // end this step w/o problem-status, as it would avoid execution of next steps...
              }
            }
          }
        }
        stage ("Run Tests") {
          parallel {
            %STAGES%  
          }
        }
        stage ("Unlock") {
          agent {
            label "aix&&18.2&&cita_latest"
          }
          steps {
            script {
              catchError(buildResult: "UNSTABLE", stageResult: "FAILURE") {
                def LOCKFILE="%LOCKFILE%"
                if (LOCKFILE != "") {
                  sh "rm $LOCKFILE"
                }
              }
            } 
          }
        }
      }
    }
    </script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>