stage ('aix_%VERSION%') {
  agent{
    label "%CITA_VERSION%&&aix&&%VERSION%"
  }
  steps {                
    script {
      def rc=-1
      def citaDEVT ="/devt/"
      [%BITS%].each { BITS ->
        [%EDITIONS%].each { EDITION ->
          [%EXTRAS%].each { P ->
            echo "NODE_NAME = ${env.NODE_NAME}"            
            def path = "/opt/mdyalog/%VERSION%/${BITS}/${EDITION}/${P}/mapl"
            def exists = fileExists(path)          
            if (exists) {
              echo "PLATFORM=aix, path=${path}: File exists!"
            } else {
              error "Found no interpreter for ${env.NODE_NAME}. Labels: ${env.NODE_LABELS}"
            }
            cmdlinePre = '%CMDLINEPRE%'
            if (cmdlinePre != "")
            {
              sh "$cmdlinePre"
            }
            if ("$EDITION" == "classic") {
              sh 'echo ")off" | APLT1=utf8 APLT2=utf8 APLK0=utf8'
            }
            cmdline = "%CMDLINE% citaDEVT=${citaDEVT}"
            echo "Launching $path $cmdline "
            sh(script: "$path $cmdline" , returnStatus: true);
            exists = fileExists("%CITA_LOG%.ok") 
            if (exists) {
              echo "Test succeeded"
              rc = (rc < 1)?0:1
            } else {
              echo "Test did not end with status file %CITA_LOG%.ok"
              rc = 1
            }
            echo "rc=${rc}"
          }
        }
      }
      if (rc==0) {
        sh "exit 0"
      } else {
        sh "exit 1"
      }
    }
  }
}